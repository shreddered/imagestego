language: cpp

# arch:
  # - amd64
  # - arm64

# addons:
  # apt:
    # sources:
      # - sourceline: 'ppa:ubuntu-toolchain-r/test'
    # packages:
      # - cmake-data
      # - cmake
      # - lcov

# install: scripts/install-deps.sh

# env:
  # - MODULES="core,lossless,comp,wavelet"
  # - MODULES="core,lossless,comp"

# TODO: add more compilers
jobs:
  include:
    - name: "GCC x86"
      arch: amd64
      os: linux
      dist: bionic
      compiler: gcc
      env:
        - MODULES="core,lossless,comp,wavelet"

    - name: "GCC-9 arm64"
      arch: arm64
      os: linux
      dist: bionic
      compiler: gcc-9
      env:
        - MODULES="core,lossless,comp,wavelet" CC=gcc-9 CXX=g++-9
      addons:
        apt:
          sources:
            - sourceline: "ppa:ubuntu-toolchain-r/test"
          packages:
            - gcc-9
            - g++-9

    - name: "Clang x86"
      arch: amd64
      os: linux
      dist: bionic
      compiler: clang
      env:
        - MODULES="core,lossless,comp,wavelet"

    - name: "Clang-9 arm64"
      arch: arm64
      os: linux
      dist: bionic
      compiler: clang-9
      env:
        - MODULES="core,lossless,comp,wavelet" CC=clang-9 CXX=clang++-9
      addons:
        apt:
          sources:
            - sourceline: "ppa:ubuntu-toolchain-r/test"
          packages:
            - clang-9

    - name: "Apple Clang x86"
      os: osx
      compiler: clang
      env:
        - MODULES="core,lossless,comp"

cache:
  directories:
    - $TRAVIS_BUILD_DIR/opencv

script: scripts/build.sh

after_success:
  - cd build
  - cp ../test/test.jpg .
  - ctest --verbose
  - cd ..

after_script: scripts/coverage.sh
