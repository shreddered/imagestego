language: cpp

# TODO: add more compilers
jobs:
  include:
    - name: "GCC x86"
      arch: amd64
      os: linux
      dist: bionic
      compiler: gcc
      env:
        - MODULES="core,lossless,comp,wavelet" COVERAGE=1
      addons:
        apt:
          packages:
            - lcov
    - name: "GCC-9 arm64"
      arch: arm64
      os: linux
      dist: bionic
      compiler: gcc-9
      env:
        - MODULES="core,lossless,comp,wavelet" CC=gcc-9 CXX=g++-9
      addons:
        apt:
          sources:
            - sourceline: "ppa:ubuntu-toolchain-r/test"
          packages:
            - gcc-9
            - g++-9
    - name: "Clang x86"
      arch: amd64
      os: linux
      dist: bionic
      compiler: clang
      env:
        - MODULES="core,lossless,comp,wavelet"
    - name: "GCC-9 x86"
      arch: amd64
      os: linux
      dist: bionic
      compiler: gcc-9
      env:
        - MODULES="core,lossless,comp,wavelet" CC=gcc-9 CXX=g++-9
      addons:
        apt:
          sources:
            - sourceline: "ppa:ubuntu-toolchain-r/test"
          packages:
            - gcc-9
            - g++-9
    - name: "Clang-10 arm64"
      arch: arm64
      os: linux
      dist: bionic
      compiler: clang-10
      env:
        - MODULES="core,lossless,comp,wavelet" CC=clang-10 CXX=clang++-10
      addons:
        apt:
          sources:
            - sourceline: "ppa:ubuntu-toolchain-r/test"
          packages:
            - clang-10
            - clang++-10
            - lld-10
    - name: "Apple Clang x86"
      os: osx
      compiler: clang
      env:
        - MODULES="core,lossless,comp,wavelet"

cache:
  directories:
    - $TRAVIS_BUILD_DIR/opencv

install: scripts/install-deps.sh

script: scripts/build.sh

after_success:
  - cd build
  - cp ../test/test.jpg .
  - ctest --verbose
  - cd ..

after_script: scripts/coverage.sh
